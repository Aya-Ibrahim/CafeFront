package beans;
// Generated Apr 26, 2017 2:26:31 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="orders"
    ,catalog="arkancafe"
)
public class Orders  implements java.io.Serializable {


     private Integer orderId;
     private Tables tables;
     private User user;
     private String voucherNumber;
     private Date orderDate;
     private boolean isClosed;
     private Date closedDate;
     private Set transactions = new HashSet(0);
     private Set orderlines = new HashSet(0);
     private Set serviceLines = new HashSet(0);

    public Orders() {
    }

	
    public Orders(Tables tables, User user, String voucherNumber, Date orderDate, boolean isClosed, Date closedDate) {
        this.tables = tables;
        this.user = user;
        this.voucherNumber = voucherNumber;
        this.orderDate = orderDate;
        this.isClosed = isClosed;
        this.closedDate = closedDate;
    }
    public Orders(Tables tables, User user, String voucherNumber, Date orderDate, boolean isClosed, Date closedDate, Set transactions, Set orderlines, Set serviceLines) {
       this.tables = tables;
       this.user = user;
       this.voucherNumber = voucherNumber;
       this.orderDate = orderDate;
       this.isClosed = isClosed;
       this.closedDate = closedDate;
       this.transactions = transactions;
       this.orderlines = orderlines;
       this.serviceLines = serviceLines;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="order_id", unique=true, nullable=false)
    public Integer getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="table_id", nullable=false)
    public Tables getTables() {
        return this.tables;
    }
    
    public void setTables(Tables tables) {
        this.tables = tables;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cashier_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="voucher_number", nullable=false, length=25)
    public String getVoucherNumber() {
        return this.voucherNumber;
    }
    
    public void setVoucherNumber(String voucherNumber) {
        this.voucherNumber = voucherNumber;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="order_Date", nullable=false, length=19)
    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    
    @Column(name="is_closed", nullable=false)
    public boolean isIsClosed() {
        return this.isClosed;
    }
    
    public void setIsClosed(boolean isClosed) {
        this.isClosed = isClosed;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="closedDate", nullable=false, length=19)
    public Date getClosedDate() {
        return this.closedDate;
    }
    
    public void setClosedDate(Date closedDate) {
        this.closedDate = closedDate;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tx_order_transactions", catalog="arkancafe", joinColumns = { 
        @JoinColumn(name="order_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tx_id", nullable=false, updatable=false) })
    public Set getTransactions() {
        return this.transactions;
    }
    
    public void setTransactions(Set transactions) {
        this.transactions = transactions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public Set getOrderlines() {
        return this.orderlines;
    }
    
    public void setOrderlines(Set orderlines) {
        this.orderlines = orderlines;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public Set getServiceLines() {
        return this.serviceLines;
    }
    
    public void setServiceLines(Set serviceLines) {
        this.serviceLines = serviceLines;
    }




}


